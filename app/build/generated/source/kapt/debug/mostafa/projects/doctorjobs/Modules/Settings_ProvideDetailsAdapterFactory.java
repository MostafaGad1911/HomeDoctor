// Generated by Dagger (https://dagger.dev).
package mostafa.projects.doctorjobs.Modules;

import android.app.Activity;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import homedoctor.adapters.Details_adapter;
import homedoctor.models.Detail;
import java.util.ArrayList;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Settings_ProvideDetailsAdapterFactory implements Factory<Details_adapter> {
  private final Settings module;

  private final Provider<Activity> contextProvider;

  private final Provider<ArrayList<Detail>> detailListProvider;

  public Settings_ProvideDetailsAdapterFactory(Settings module, Provider<Activity> contextProvider,
      Provider<ArrayList<Detail>> detailListProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.detailListProvider = detailListProvider;
  }

  @Override
  public Details_adapter get() {
    return provideDetailsAdapter(module, contextProvider.get(), detailListProvider.get());
  }

  public static Settings_ProvideDetailsAdapterFactory create(Settings module,
      Provider<Activity> contextProvider, Provider<ArrayList<Detail>> detailListProvider) {
    return new Settings_ProvideDetailsAdapterFactory(module, contextProvider, detailListProvider);
  }

  public static Details_adapter provideDetailsAdapter(Settings instance, Activity context,
      ArrayList<Detail> detailList) {
    return Preconditions.checkNotNull(instance.provideDetailsAdapter(context, detailList), "Cannot return null from a non-@Nullable @Provides method");
  }
}
