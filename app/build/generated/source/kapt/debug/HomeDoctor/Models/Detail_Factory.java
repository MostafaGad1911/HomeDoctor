// Generated by Dagger (https://dagger.dev).
package homedoctor.models;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Detail_Factory implements Factory<Detail> {
  private final Provider<String> bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider;

  public Detail_Factory(
      Provider<String> bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider) {
    this.bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider = bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider;
  }

  @Override
  public Detail get() {
    return new Detail(bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider.get(), bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider.get(), bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider.get(), bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider.get(), bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider.get(), bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider.get(), bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider.get());
  }

  public static Detail_Factory create(
      Provider<String> bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider) {
    return new Detail_Factory(bloodPAndEmailAndGlucoseAndHeartAndPhoneAndRespirationAndTemperatureProvider);
  }

  public static Detail newInstance(String email, String phone, String temperature, String glucose,
      String bloodP, String respiration, String heart) {
    return new Detail(email, phone, temperature, glucose, bloodP, respiration, heart);
  }
}
