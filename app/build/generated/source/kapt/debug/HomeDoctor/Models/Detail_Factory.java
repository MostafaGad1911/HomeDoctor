// Generated by Dagger (https://dagger.dev).
package HomeDoctor.Models;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Detail_Factory implements Factory<Detail> {
  private final Provider<String> emailProvider;

  private final Provider<String> phoneProvider;

  private final Provider<String> temperatureProvider;

  private final Provider<String> glucoseProvider;

  private final Provider<String> bloodPProvider;

  private final Provider<String> respirationProvider;

  private final Provider<String> heartProvider;

  public Detail_Factory(Provider<String> emailProvider, Provider<String> phoneProvider,
      Provider<String> temperatureProvider, Provider<String> glucoseProvider,
      Provider<String> bloodPProvider, Provider<String> respirationProvider,
      Provider<String> heartProvider) {
    this.emailProvider = emailProvider;
    this.phoneProvider = phoneProvider;
    this.temperatureProvider = temperatureProvider;
    this.glucoseProvider = glucoseProvider;
    this.bloodPProvider = bloodPProvider;
    this.respirationProvider = respirationProvider;
    this.heartProvider = heartProvider;
  }

  @Override
  public Detail get() {
    return new Detail(emailProvider.get(), phoneProvider.get(), temperatureProvider.get(), glucoseProvider.get(), bloodPProvider.get(), respirationProvider.get(), heartProvider.get());
  }

  public static Detail_Factory create(Provider<String> emailProvider,
      Provider<String> phoneProvider, Provider<String> temperatureProvider,
      Provider<String> glucoseProvider, Provider<String> bloodPProvider,
      Provider<String> respirationProvider, Provider<String> heartProvider) {
    return new Detail_Factory(emailProvider, phoneProvider, temperatureProvider, glucoseProvider, bloodPProvider, respirationProvider, heartProvider);
  }

  public static Detail newInstance(String email, String phone, String temperature, String glucose,
      String bloodP, String respiration, String heart) {
    return new Detail(email, phone, temperature, glucose, bloodP, respiration, heart);
  }
}
